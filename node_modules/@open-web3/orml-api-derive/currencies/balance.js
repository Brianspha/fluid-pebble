"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.balance = void 0;

var _util = require("@polkadot/api-derive/util");

var _operators = require("rxjs/operators");

const balance = (instanceId, api) => {
  return (0, _util.memo)(instanceId, (address, token) => {
    return api.rpc.system.properties().pipe((0, _operators.mergeMap)(properties => {
      const currencyId = api.registry.createType('CurrencyId', token);
      const nativeTokenSymbol = properties.tokenSymbol.unwrapOrDefault()[0].toString();
      const nativeCurrencyId = api.registry.createType('CurrencyId', (api.registry.getDefinition('CurrencyId') || '').includes('"Token":"TokenSymbol"') ? {
        Token: nativeTokenSymbol
      } : nativeTokenSymbol);

      if (currencyId.eq(nativeCurrencyId)) {
        return api.query.system.account(address).pipe((0, _operators.map)(result => {
          return result.data.free;
        }));
      } // TODO: `asMap.key[0]` is probably wrong and needs fix


      const key1 = api.query.tokens.accounts.creator.meta.type.asMap.key[0].toString();
      const arg = key1 === 'CurrencyId' ? [token, address] : [address, token];
      return api.query.tokens.accounts(...arg).pipe((0, _operators.map)(result => {
        return result.free;
      }));
    }));
  });
};

exports.balance = balance;